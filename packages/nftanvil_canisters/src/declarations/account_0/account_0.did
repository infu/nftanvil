type TokenIndex = nat32;
type TokenIdentifier = text;
type StatsResponse = 
 record {
   cycles: nat;
   rts_heap_size: nat;
   rts_max_live_size: nat;
   rts_memory_size: nat;
   rts_reclaimed: nat;
   rts_total_allocation: nat;
   rts_version: text;
 };
type Config = 
 record {
   account: vec principal;
   anv: principal;
   collection: principal;
   history: principal;
   nft: vec principal;
   nft_avail: vec principal;
   pwr: principal;
   router: principal;
   slot: nat;
   treasury: principal;
 };
type AccountIdentifier = blob;
type Account = 
 service {
   add: (AccountIdentifier, TokenIndex) -> ();
   config_set: (Config) -> ();
   list: (AccountIdentifier, nat) -> (vec TokenIdentifier) query;
   rem: (AccountIdentifier, TokenIndex) -> ();
   stats: () -> (StatsResponse) query;
 };
service : () -> Account
