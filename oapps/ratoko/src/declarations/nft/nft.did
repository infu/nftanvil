type Token = 
 record {
   content_encoding: text;
   index: nat;
   key: text;
   sha256: opt vec nat8;
 };
type StreamingStrategy = variant {
                           Callback:
                            record {
                              callback: CallbackFunc;
                              token: Token;
                            };};
type Response = 
 record {
   body: blob;
   headers: vec HeaderField;
   status_code: nat16;
   streaming_strategy: opt StreamingStrategy;
 };
type Request = 
 record {
   body: blob;
   headers: vec HeaderField;
   method: text;
   url: text;
 };
type Renderer = 
 service {
   http_request: (Request) -> (Response) query;
   http_request_streaming_callback: (Token) -> (Callback) query;
   set: (nat, nat, text) -> ();
 };
type HeaderField = 
 record {
   text;
   text;
 };
type CallbackFunc = func () -> ();
type Callback = 
 record {
   body: blob;
   token: opt Token;
 };
service : () -> Renderer
